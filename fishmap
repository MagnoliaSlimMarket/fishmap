#!/bin/ruby

require "shodan"
require "resolv"
require "socket"
require "net/http"

Red = "\033[31m"; Green = "\033[32m"; Yellow = "\033[33m"; White = "\033[97m"
puts Green; system("clear && cat banner"); puts White
if (ARGV[0].nil? || ARGV[1].nil? || ARGV[0] == "-h" || ARGV[0] == "--help") then
   puts "Usage: "
   puts "DNS resolver      --resolver <www.google.com>"
   puts "Port Scanner      --port-scan <ip>"
   puts "Shodan Search     --shodan <your api key> <service name>"
   puts "Directories Brute --brute <http://www.vulnweb.com>"
end

if (ARGV[0] == "--brute")
   File.open("dir.txt").each do | dir |
      begin
         url = (ARGV[1]+"/"+dir.chomp)
         request = Net::HTTP.get_response(URI.parse(url))
         puts request.code+" => "+dir
      rescue URI::InvalidURIError
         puts White+"please enter the URL as the program accepts...."
         break
      rescue Interrupt
         puts ""
         puts Red+"Program stopped by user"
         break
      end
   end
elsif (ARGV[0] == "--port-scan")
   ports = [20,21,22,23,25,80,110,443,512,522,8080,1080,4444,3389]
   ports.each do | port |
      begin
         sock = TCPSocket.new(ARGV[1],port)
         printf Yellow+"[ * ] "
         puts Green+"Port: #{port} Open!"
      rescue Errno::ECONNREFUSED
         printf Yellow+"[ * ] "
         puts Red+"Port: #{port} Closed"
      rescue Interrupt
         puts ""
         puts Red+"Program stopped by user"
         break
       end
   end
elsif (ARGV[0] == "--resolver")
   puts Resolv.getaddresses "#{ARGV[1]}"
elsif (ARGV[0] == "--shodan")
   begin
      api_key = Shodan::Shodan.new(ARGV[1])

      results = api_key.search(ARGV[2])
      results['matches'].each do |r|
         puts "IP: #{r['ip_str']}"
         puts r['data'] + "\n" + "="*45
      end
   rescue JSON::ParserError
      puts Red+"API Key invalid!"
   end
end
